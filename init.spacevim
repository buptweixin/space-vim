" Let Vim and NeoVim shares the same plugin directory.
" Comment it out if you don't like
let g:spacevim_plug_home = '~/.vim/plugged'

" The default leader key is space key.
" Uncomment the line below and modify "<\Space>" if you prefer another
" let g:spacevim_leader = "<\Space>"

<<<<<<< HEAD
  " Custom layers
  Layer 'text-align'
  Layer 'ctrlp'
  Layer 'better-motion'
  Layer 'ycmd'
  Layer 'python'
  Layer 'markdown'
  Layer 'chinese'
  Layer 'c-c++'
  Layer 'html'
  Layer 'vue'
  Layer 'file-manager'
  Layer 'tmux'
  Layer 'code-snippets'
  Layer 'javascript'
  Layer 'git'
  Layer 'syntax-checking'
  Layer 'spacevim'
  Layer 'editing'
  Layer 'programming'

endfunction
=======
" The default local leader key is comma.
" Uncomment the line below and modify ',' if you prefer another
" let g:spacevim_localleader = ','
>>>>>>> 1574cf9d72562ae84ccfcbeeb9cd069bf3f55c7a

" Enable the existing layers in space-vim
let g:spacevim_layers = [
      \ 'fzf', 'unite', 'better-defaults',
      \ 'which-key',
      \ ]

" If you want to have more control over the layer, try using Layer command.
" if g:spacevim_gui
"   Layer 'airline'
" endif

" Manage your own plugins, refer to vim-plug's instruction for more detials.
function! UserInit()

<<<<<<< HEAD
  " Install personal plugins
  " Plug 'hecal3/vim-leader-guide'
  Plug 'iamcco/mathjax-support-for-mkdp'
  Plug 'iamcco/markdown-preview.vim'
  " ctrlspace
  Plug 'vim-ctrlspace/vim-ctrlspace'
=======
  " Add plugin via Plug command.
  Plug 'junegunn/seoul256.vim'
>>>>>>> 1574cf9d72562ae84ccfcbeeb9cd069bf3f55c7a

endfunction

" Override the default settings as well as adding extras
function! UserConfig()
	" disable auto cancel highlight of searching
	map n <Plug>(anzu-n-with-echo)
  map N <Plug>(anzu-N-with-echo)

	" http://stackoverflow.com/questions/13194428/is-better-way-to-zoom-windows-in-vim-than-zoomwin
	" Zoom / Restore window.
	function! s:ZoomToggle() abort
			if exists('t:zoomed') && t:zoomed
					execute t:zoom_winrestcmd
					let t:zoomed = 0
			else
					let t:zoom_winrestcmd = winrestcmd()
					resize
					vertical resize
					let t:zoomed = 1
			endif
	endfunction
	command! ZoomToggle call s:ZoomToggle()
	nnoremap <silent> <LocalLeader>z :ZoomToggle<CR>

  " 鼠标暂不启用, 键盘党....
  set mouse-=a
  " 启用鼠标
  " set mouse=a
  " Hide the mouse cursor while typing
  " set mousehide
  
  " ctrlspace {{{
  " if has("gui_running")
      " Settings for MacVim and Inconsolata font
  let g:CtrlSpaceSymbols = { "File": "◯", "CTab": "▣", "Tabs": "▢" }
  " endif
  if executable("ag")
      let g:CtrlSpaceGlobCommand = 'ag -l --nocolor -g ""'
  endif
  let g:CtrlSpaceLoadLastWorkspaceOnStart = 1
  let g:CtrlSpaceSaveWorkspaceOnSwitch = 1
  let g:CtrlSpaceSaveWorkspaceOnExit = 1
  let g:airline_exclude_preview = 1
  hi CtrlSpaceSelected guifg=#586e75 guibg=#eee8d5 guisp=#839496 gui=reverse,bold ctermfg=10 ctermbg=7 cterm=reverse,bold
  hi CtrlSpaceNormal   guifg=#839496 guibg=#021B25 guisp=#839496 gui=NONE ctermfg=12 ctermbg=0 cterm=NONE
  hi CtrlSpaceSearch   guifg=#cb4b16 guibg=NONE gui=bold ctermfg=9 ctermbg=NONE term=bold cterm=bold
  hi CtrlSpaceStatus   guifg=#839496 guibg=#002b36 gui=reverse term=reverse cterm=reverse ctermfg=12 ctermbg=8
  " }}}
  nnoremap <silent><Leader>p :CtrlSpace O<Cr>

  " If you have installed the powerline fonts and want to enable airline layer
  " let g:airline_powerline_fonts=1
  let g:clang_library_path = '/usr/local/Cellar/llvm/3.6.2/lib/libclang.dylib'

  " Use gui colors in terminal if available
  if has('termguicolors')
    set termguicolors
    if g:spacevim_tmux
      " If use vim inside tmux, see https://github.com/vim/vim/issues/993
      " set Vim-specific sequences for RGB colors
      let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
      let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    endif
  endif

endfunction
